SELECT;

The SELECT statement is used to select data from a database.
A query may retrieve information from selected columns or from all columns in the table.

You can select multiple table columns at once.
Just list the column names, separated by commas
(!!!Do not put a comma after the last column name.)

example:

SELECT column_list
FROM table_name;

- column_list includes one or more columns from which data is retrieved
- table-name is the name of the table from which the information is retrieved


To retrieve all of the information contained in your table, place an asterisk (*)
sign after the SELECT command, rather than typing in each column names separately.

The following SQL statement selects all of the columns in the customers table:
(!!In SQL, the asterisk means all.)
example:

SELECT * FROM customers;

============================================================================

SHOW DATABASES;

The SQL SHOW statement displays information contained in the database and its tables.
This helpful tool lets you keep track of your database contents and remind yourself about the structure of your tables.
For example: the SHOW DATABASES; command lists the databases managed by the server.

============================================================================

SHOW TABLES;

The SHOW TABLES; command is used to display all of the tables in the currently selected MySQL database.

============================================================================

SHOW COLUMNS; (DESC - short for DESCRIBE)

SHOW COLUMNS displays information about the columns in a given table.
The following example displays the columns in our customers table:
SHOW COLUMNS FROM customers;

The DESC tableName also works in some RDBMS;

SHOW COLUMNS displays the following values for each table column:

Field: column name
Type: column data type
Key: indicates whether the column is indexed
Default: default value assigned to the column
Extra: may contain any additional information that is available about a given column

============================================================================

DISTINCT;
(!!The DISTINCT keyword only fetches the unique values.)

The SQL DISTINCT keyword is used in conjunction with SELECT to eliminate all duplicate records and return only unique ones.
The basic syntax of DISTINCT is as follows:

SELECT DISTINCT column_name1, column_name2
FROM table_name;

============================================================================

LIMIT;

By default, all results that satisfy the conditions specified in the SQL statement are returned.
However, sometimes we need to retrieve just a subset of records.
In MySQL, this is accomplished by using the LIMIT keyword.

The syntax for LIMIT is as follows:

SELECT column list
FROM table_name
LIMIT [number of records];

You can also pick up a set of records from a particular offset.
In the following example, we pick up four records, starting from the third position

SELECT column list
FROM table_name
OFFSET [starting point]
LIMIT [number of records];

OR ----

SELECT column list
FROM table_name
LIMIT [starting point], [number of records];


(!!!MySQL starts counting from zero, meaning that the offset of the first row is 0, not 1.)
============================================================================

Fully Qualified Names

In SQL, you can provide the table name prior to the column name, by separating them with a dot.
The following statements are equivalent:

SELECT City FROM customers;

SELECT customers.City FROM customers;

(!!!This form of writing is especially useful when working with multiple tables that may share the same column names.)

============================================================================

ORDER BY

ORDER BY is used with SELECT to sort the returned data.

The following example sorts our customers table by the FirstName column.

SELECT * From customers
ORDER BY FirstName;

(!!!By default, the ORDER BY keyword sorts the results in ascending order.)

============================================================================

Sorting Multiple Columns

ORDER BY can sort retrieved data by multiple columns.
When using ORDER BY with more than one column, separate the list of columns to follow ORDER BY with commas.

SELECT * FROM customers
ORDER BY FirstName, Age;

As we have two names, they will be ordered by the Age column in ascending order.

(!!The ORDER BY command starts ordering in the same sequence as the columns.
It will order by the first column listed, then by the second, and so on.)

============================================================================

WHERE;

The WHERE clause is used to extract only those records that fulfill a specified criterion.
The syntax for the WHERE clause:

SELECT column_list
FROM table_name
WHERE condition;

============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
============================================================================
